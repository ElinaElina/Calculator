public class CalculatorImplement implements CalculatorInterface {

    double[] num;
    char[] operation;
    String string;
    int len;
    int prev;
    String temp;
    int pos;
    int OpPos;
    int NumPos;
    double result;

    double Result() {
        return result;
    }

    CalculatorImplement(String string) {//this string is input
        result = 0;
        this.string = string;
        len = string.length();
        num = new double[20];
        operation = new char[20];
        prev = 0;
        pos = 0;
        OpPos = 1;
        NumPos = 0;

        GetNumOp();
    }

   @Override
    public void GetNumOp() { //this get from input and make oprations with numbers
        while (pos < len) {

            if (string.charAt(pos) == '+') {
                operation[OpPos] = '+';
                OpPos += 2;
                temp = string.substring(prev, pos);
                num[NumPos] = Double.parseDouble(temp);
                NumPos += 2;
                prev = pos + 1; //get numbers out
            } else if (string.charAt(pos) == '-') {
                operation[OpPos] = '-';
                OpPos += 2;
                temp = string.substring(prev, pos);
                num[NumPos] = Double.parseDouble(temp);
                NumPos += 2;
                prev = pos + 1;
            } else if (string.charAt(pos) == '*') {
                operation[OpPos] = '*';
                OpPos += 2;
                temp = string.substring(prev, pos);
                num[NumPos] = Double.parseDouble(temp);
                NumPos += 2;
                prev = pos + 1;
            } else if (string.charAt(pos) == '/') {
                operation[OpPos] = '/';
                OpPos += 2;
                temp = string.substring(prev, pos);
                num[NumPos] = Double.parseDouble(temp);
                NumPos += 2;
                prev = pos + 1;
            } else {
            }
            pos++;
        }
        temp = string.substring(prev);
        num[NumPos] = Double.parseDouble(temp);

        public void Calculate (){
        for (int i = 1; i <= OpPos; i += 2) {
            if (operation[i] == '*') {
                num[i - 1] = num[i - 1] * num[i + 1];
                ChangeNumPos(i + 1);
                ChangeOpPos(i);
            }
        }
        for (int i = 1; i <= OpPos; i += 2) {
            if (operation[i] == '/') {
                num[i - 1] = num[i - 1] / num[i + 1];
                ChangeNumPos(i + 1);
                ChangeOpPos(i);
            }
        }
        for (int i = 1; i <= OpPos; i += 2) {
            if (operation[i] == '-') {
                num[i - 1] = num[i - 1] - num[i + 1];
                ChangeNumPos(i + 1);
                ChangeOpPos(i);
            }
        }
        for (int i = 1; i <= OpPos; i += 2) {
            if (operation[i] == '+') {
                num[i - 1] = num[i - 1] + num[i + 1];
                ChangeNumPos(i + 1);
                ChangeOpPos(i);
            }
        }
        // always minus before plus, because if first would be plus, it gives incorect result

        public void ChangeNumPos(int pos1){

                for (int i = pos1; i < NumPos; i += 2) num[i] = num[i + 2];
            }
        public void ChangeOpPos(int pos1){

        for (int i = pos1; i < OpPos; i += 2) operation[i] = operation[i + 2];
    }
}}}
